{
  "openapi": "3.1.0",
  "info": {
    "title": "Contacts API",
    "description": "API for managing contacts",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-crud-9tqb.onrender.com"
    }
  ],
  "components": {
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact ID",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "example": "+380335475117"
          },
          "email": {
            "type": "string",
            "description": "Contact email",
            "example": "qwant@ukr.net"
          },
          "contactType": {
            "type": "string",
            "description": "Type of contact (work, home, personal)",
            "enum": ["work", "home", "personal"],
            "example": "work"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Whether the contact is a favourite",
            "example": true
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who owns the contact",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "type": "string",
            "description": "Link to contact's photo",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Not Found"
      }
    }
  },
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1,
            "description": "The page number for pagination. Default is 1."
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 10,
            "description": "The number of contacts per page. Default is 10."
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "example": "_id",
            "description": "You can specify any contact field to sort by. Default is _id."
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc",
            "description": "The order to sort contacts. Default is ascending ('asc')."
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": ["work", "home", "personal"]
            },
            "example": "work",
            "description": "The type of contact (work, home, or personal)."
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Filter by favorite status (true or false)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "minimum": 1,
                          "example": 2
                        },
                        "perPage": {
                          "type": "integer",
                          "minimum": 1,
                          "example": 4
                        },
                        "totalItems": {
                          "type": "integer",
                          "minimum": 0,
                          "example": 4
                        },
                        "totalPages": {
                          "type": "integer",
                          "minimum": 0,
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType",
                  "isFavourite"
                ],
                "properties": {
                  "name": {
                    "description": "Contact name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Phone number",
                    "type": "string",
                    "example": "+38093588778"
                  },
                  "contactType": {
                    "description": "Contact type",
                    "type": "string",
                    "enum": ["home", "work", "personal"]
                  },
                  "photo": {
                    "description": "Contact photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "isFavourite": {
                    "description": "Whether the contact is a favourite",
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by ID",
        "operationId": "getContactId",
        "description": "Get contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Contact ID",
            "schema": {
              "type": "string",
              "example": "67698dcab119f87bc7eee931"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved contactId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched contactId!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "description": "Delete a specific contact by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Contact ID",
            "schema": {
              "type": "string",
              "example": "67698dcab119f87bc7eee931"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the contact",
            "content": {}
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  }
}
